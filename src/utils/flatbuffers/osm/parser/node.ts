// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Node {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Node {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

id():bigint {
  return this.bb!.readUint64(this.bb_pos);
}

static sizeOf():number {
  return 8;
}

static createNode(builder:flatbuffers.Builder, id: bigint):flatbuffers.Offset {
  builder.prep(8, 8);
  builder.writeInt64(id);
  return builder.offset();
}

}
